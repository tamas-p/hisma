@startuml sm_object diagram
title SMObjectDiagram for visualization

object "parentMachine : Machine" as parent
object "state : State" as state
object "region : Region" as region
object "childMachine : Machine" as child

parent "states" *-- "0..*" state
state "regions" *-- "0..*" region
region "machine" *-- "1" child

@enduml

@startuml sm_callback_chain
title Class diagram showing how child machine can communicate with its parent machine through callbacks

!$notify = Red
!$notifyStyle = '#red,thickness=1'

note as N1
Region translates from ExitNotificationFromMachine
to ExitNotificationFromRegion. This is practically
translation from exitId from child machine to event
defined in the region.
end note

object "parent : Machine" as parent {
    +Future<void> _processStateNotification(Message notification)
}
object "state : State" as state {
    +Future<void> _processRegionNotification(Message notification)
}
object "region : Region" as region {
    +Future<void> _processMachineNotification(Message notification)
}
object "child : Machine" as child {

}


object "event : Event" as event
region "exitConnectors" o- event : \t\t\t

object "exitPointId : Enum" as exitPointId
exitPointId .. (region, event) 

object "trigger : Trigger" as trigger
object "entryPointId : Enum" as entryPointId
entryPointId -o "entryConnectors" region : \t\t
trigger .. (region, entryPointId)

' object "_processMachineNotification : void Function(Message message)" as _processMachineNotification 
' region *-- _processMachineNotification 
region <-[$notifyStyle]- "notifyRegion(ExitNotificationFromMachine)" child

' object "_processRegionNotification : void Function(Message message)" as _processRegionNotification
' state *-- _processRegionNotification
state <-[$notifyStyle]-- "notifyState(ExitNotificationFromRegion)" region

' object "_processStateNotification : void Function(Message message)" as _processStateNotification
' parent *-- _processStateNotification : \t\t
parent <-[$notifyStyle]- "notifyMachine(Message)" state
@enduml

@startuml messages
abstract class Message
class ExitNotificationFromRegion<E>
class ExitNotificationFromMachine<E>

Message <|-- ExitNotificationFromRegion
Message <|-- ExitNotificationFromMachine
@enduml
